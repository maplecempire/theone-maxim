<?php
// auto-generated by sfPropelCrud
// date: 2012/11/21 21:07:46
?>
<?php

/**
 * zMlmMemberApplication actions.
 *
 * @package    sf_sandbox
 * @subpackage zMlmMemberApplication
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class zMlmMemberApplicationActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('zMlmMemberApplication', 'list');
  }

  public function executeList()
  {
    $this->mlm_member_applications = MlmMemberApplicationPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->mlm_member_application = MlmMemberApplicationPeer::retrieveByPk($this->getRequestParameter('member_id'));
    $this->forward404Unless($this->mlm_member_application);
  }

  public function executeCreate()
  {
    $this->mlm_member_application = new MlmMemberApplication();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->mlm_member_application = MlmMemberApplicationPeer::retrieveByPk($this->getRequestParameter('member_id'));
    $this->forward404Unless($this->mlm_member_application);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('member_id'))
    {
      $mlm_member_application = new MlmMemberApplication();
    }
    else
    {
      $mlm_member_application = MlmMemberApplicationPeer::retrieveByPk($this->getRequestParameter('member_id'));
      $this->forward404Unless($mlm_member_application);
    }

    $mlm_member_application->setMemberId($this->getRequestParameter('member_id'));
    $mlm_member_application->setFullName($this->getRequestParameter('full_name'));
    $mlm_member_application->setEmail($this->getRequestParameter('email'));
    $mlm_member_application->setContact($this->getRequestParameter('contact'));
    $mlm_member_application->setQq($this->getRequestParameter('qq'));
    $mlm_member_application->setGender($this->getRequestParameter('gender'));
    $mlm_member_application->setCountry($this->getRequestParameter('country'));
    if ($this->getRequestParameter('dob'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('dob'), $this->getUser()->getCulture());
      $mlm_member_application->setDob("$y-$m-$d");
    }
    $mlm_member_application->setStatusCode($this->getRequestParameter('status_code'));
    $mlm_member_application->setCreatedBy($this->getRequestParameter('created_by'));
    if ($this->getRequestParameter('created_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('created_on'), $this->getUser()->getCulture());
      $mlm_member_application->setCreatedOn("$y-$m-$d");
    }
    $mlm_member_application->setUpdatedBy($this->getRequestParameter('updated_by'));
    if ($this->getRequestParameter('updated_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('updated_on'), $this->getUser()->getCulture());
      $mlm_member_application->setUpdatedOn("$y-$m-$d");
    }

    $mlm_member_application->save();

    return $this->redirect('zMlmMemberApplication/show?member_id='.$mlm_member_application->getMemberId());
  }

  public function executeDelete()
  {
    $mlm_member_application = MlmMemberApplicationPeer::retrieveByPk($this->getRequestParameter('member_id'));

    $this->forward404Unless($mlm_member_application);

    $mlm_member_application->delete();

    return $this->redirect('zMlmMemberApplication/list');
  }
}
