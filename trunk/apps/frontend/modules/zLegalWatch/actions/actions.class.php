<?php
// auto-generated by sfPropelCrud
// date: 2013/11/25 17:45:37
?>
<?php

/**
 * zLegalWatch actions.
 *
 * @package    sf_sandbox
 * @subpackage zLegalWatch
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class zLegalWatchActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('zLegalWatch', 'list');
  }

  public function executeList()
  {
    $this->legal_watchs = LegalWatchPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->legal_watch = LegalWatchPeer::retrieveByPk($this->getRequestParameter('watch_id'));
    $this->forward404Unless($this->legal_watch);
  }

  public function executeCreate()
  {
    $this->legal_watch = new LegalWatch();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->legal_watch = LegalWatchPeer::retrieveByPk($this->getRequestParameter('watch_id'));
    $this->forward404Unless($this->legal_watch);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('watch_id'))
    {
      $legal_watch = new LegalWatch();
    }
    else
    {
      $legal_watch = LegalWatchPeer::retrieveByPk($this->getRequestParameter('watch_id'));
      $this->forward404Unless($legal_watch);
    }

    $legal_watch->setWatchId($this->getRequestParameter('watch_id'));
    $legal_watch->setDistId($this->getRequestParameter('dist_id'));
    $legal_watch->setFullName($this->getRequestParameter('full_name'));
    $legal_watch->setDistCode($this->getRequestParameter('dist_code'));
    $legal_watch->setAge($this->getRequestParameter('age'));
    $legal_watch->setEducationlevel($this->getRequestParameter('educationlevel'));
    $legal_watch->setEmail($this->getRequestParameter('email'));
    $legal_watch->setContact($this->getRequestParameter('contact'));
    $legal_watch->setMessage($this->getRequestParameter('message'));
    $legal_watch->setFileName($this->getRequestParameter('file_name'));
    $legal_watch->setCreatedBy($this->getRequestParameter('created_by'));
    if ($this->getRequestParameter('created_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('created_on'), $this->getUser()->getCulture());
      $legal_watch->setCreatedOn("$y-$m-$d");
    }
    $legal_watch->setUpdatedBy($this->getRequestParameter('updated_by'));
    if ($this->getRequestParameter('updated_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('updated_on'), $this->getUser()->getCulture());
      $legal_watch->setUpdatedOn("$y-$m-$d");
    }

    $legal_watch->save();

    return $this->redirect('zLegalWatch/show?watch_id='.$legal_watch->getWatchId());
  }

  public function executeDelete()
  {
    $legal_watch = LegalWatchPeer::retrieveByPk($this->getRequestParameter('watch_id'));

    $this->forward404Unless($legal_watch);

    $legal_watch->delete();

    return $this->redirect('zLegalWatch/list');
  }
}
