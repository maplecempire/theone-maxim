<?php
// auto-generated by sfPropelCrud
// date: 2012/06/17 16:05:48
?>
<?php

/**
 * zMlmPipCsv actions.
 *
 * @package    sf_sandbox
 * @subpackage zMlmPipCsv
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class zMlmPipCsvActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('zMlmPipCsv', 'list');
  }

  public function executeList()
  {
    $this->mlm_pip_csvs = MlmPipCsvPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->mlm_pip_csv = MlmPipCsvPeer::retrieveByPk($this->getRequestParameter('pip_id'));
    $this->forward404Unless($this->mlm_pip_csv);
  }

  public function executeCreate()
  {
    $this->mlm_pip_csv = new MlmPipCsv();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->mlm_pip_csv = MlmPipCsvPeer::retrieveByPk($this->getRequestParameter('pip_id'));
    $this->forward404Unless($this->mlm_pip_csv);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('pip_id'))
    {
      $mlm_pip_csv = new MlmPipCsv();
    }
    else
    {
      $mlm_pip_csv = MlmPipCsvPeer::retrieveByPk($this->getRequestParameter('pip_id'));
      $this->forward404Unless($mlm_pip_csv);
    }

    $mlm_pip_csv->setPipId($this->getRequestParameter('pip_id'));
    $mlm_pip_csv->setFileId($this->getRequestParameter('file_id'));
    $mlm_pip_csv->setPipsString($this->getRequestParameter('pips_string'));
    $mlm_pip_csv->setLoginId($this->getRequestParameter('login_id'));
    $mlm_pip_csv->setLoginName($this->getRequestParameter('login_name'));
    $mlm_pip_csv->setDeposit($this->getRequestParameter('deposit'));
    $mlm_pip_csv->setWithdraw($this->getRequestParameter('withdraw'));
    $mlm_pip_csv->setInOut($this->getRequestParameter('in_out'));
    $mlm_pip_csv->setCredit($this->getRequestParameter('credit'));
    $mlm_pip_csv->setVolume($this->getRequestParameter('volume'));
    $mlm_pip_csv->setCommission($this->getRequestParameter('commission'));
    $mlm_pip_csv->setTaxes($this->getRequestParameter('taxes'));
    $mlm_pip_csv->setAgent($this->getRequestParameter('agent'));
    $mlm_pip_csv->setStorage($this->getRequestParameter('storage'));
    $mlm_pip_csv->setProfit($this->getRequestParameter('profit'));
    $mlm_pip_csv->setLastBalance($this->getRequestParameter('last_balance'));
    $mlm_pip_csv->setStatusCode($this->getRequestParameter('status_code'));
    $mlm_pip_csv->setCreatedBy($this->getRequestParameter('created_by'));
    if ($this->getRequestParameter('created_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('created_on'), $this->getUser()->getCulture());
      $mlm_pip_csv->setCreatedOn("$y-$m-$d");
    }
    $mlm_pip_csv->setUpdatedBy($this->getRequestParameter('updated_by'));
    if ($this->getRequestParameter('updated_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('updated_on'), $this->getUser()->getCulture());
      $mlm_pip_csv->setUpdatedOn("$y-$m-$d");
    }

    $mlm_pip_csv->save();

    return $this->redirect('zMlmPipCsv/show?pip_id='.$mlm_pip_csv->getPipId());
  }

  public function executeDelete()
  {
    $mlm_pip_csv = MlmPipCsvPeer::retrieveByPk($this->getRequestParameter('pip_id'));

    $this->forward404Unless($mlm_pip_csv);

    $mlm_pip_csv->delete();

    return $this->redirect('zMlmPipCsv/list');
  }
}
