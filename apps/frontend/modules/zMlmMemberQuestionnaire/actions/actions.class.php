<?php
// auto-generated by sfPropelCrud
// date: 2012/11/21 21:11:05
?>
<?php

/**
 * zMlmMemberQuestionnaire actions.
 *
 * @package    sf_sandbox
 * @subpackage zMlmMemberQuestionnaire
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class zMlmMemberQuestionnaireActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('zMlmMemberQuestionnaire', 'list');
  }

  public function executeList()
  {
    $this->mlm_member_questionnaires = MlmMemberQuestionnairePeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->mlm_member_questionnaire = MlmMemberQuestionnairePeer::retrieveByPk($this->getRequestParameter('questionnaire_id'));
    $this->forward404Unless($this->mlm_member_questionnaire);
  }

  public function executeCreate()
  {
    $this->mlm_member_questionnaire = new MlmMemberQuestionnaire();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->mlm_member_questionnaire = MlmMemberQuestionnairePeer::retrieveByPk($this->getRequestParameter('questionnaire_id'));
    $this->forward404Unless($this->mlm_member_questionnaire);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('questionnaire_id'))
    {
      $mlm_member_questionnaire = new MlmMemberQuestionnaire();
    }
    else
    {
      $mlm_member_questionnaire = MlmMemberQuestionnairePeer::retrieveByPk($this->getRequestParameter('questionnaire_id'));
      $this->forward404Unless($mlm_member_questionnaire);
    }

    $mlm_member_questionnaire->setQuestionnaireId($this->getRequestParameter('questionnaire_id'));
    $mlm_member_questionnaire->setMemberId($this->getRequestParameter('member_id'));
    $mlm_member_questionnaire->setQ1($this->getRequestParameter('q1'));
    $mlm_member_questionnaire->setQ2($this->getRequestParameter('q2'));
    $mlm_member_questionnaire->setQ3($this->getRequestParameter('q3'));
    $mlm_member_questionnaire->setQ4($this->getRequestParameter('q4'));
    $mlm_member_questionnaire->setQ5($this->getRequestParameter('q5'));
    $mlm_member_questionnaire->setQ6($this->getRequestParameter('q6'));
    $mlm_member_questionnaire->setQ7($this->getRequestParameter('q7'));
    $mlm_member_questionnaire->setQ8($this->getRequestParameter('q8'));
    $mlm_member_questionnaire->setS1($this->getRequestParameter('s1'));
    $mlm_member_questionnaire->setS2($this->getRequestParameter('s2'));
    $mlm_member_questionnaire->setS3($this->getRequestParameter('s3'));
    $mlm_member_questionnaire->setStatusCode($this->getRequestParameter('status_code'));
    $mlm_member_questionnaire->setCreatedBy($this->getRequestParameter('created_by'));
    if ($this->getRequestParameter('created_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('created_on'), $this->getUser()->getCulture());
      $mlm_member_questionnaire->setCreatedOn("$y-$m-$d");
    }
    $mlm_member_questionnaire->setUpdatedBy($this->getRequestParameter('updated_by'));
    if ($this->getRequestParameter('updated_on'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('updated_on'), $this->getUser()->getCulture());
      $mlm_member_questionnaire->setUpdatedOn("$y-$m-$d");
    }

    $mlm_member_questionnaire->save();

    return $this->redirect('zMlmMemberQuestionnaire/show?questionnaire_id='.$mlm_member_questionnaire->getQuestionnaireId());
  }

  public function executeDelete()
  {
    $mlm_member_questionnaire = MlmMemberQuestionnairePeer::retrieveByPk($this->getRequestParameter('questionnaire_id'));

    $this->forward404Unless($mlm_member_questionnaire);

    $mlm_member_questionnaire->delete();

    return $this->redirect('zMlmMemberQuestionnaire/list');
  }
}
